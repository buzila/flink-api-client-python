# coding: utf-8

"""
    Flink API Client

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ClusterOverviewWithVersion(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'taskmanagers': 'int',
        'slots_total': 'int',
        'slots_available': 'int',
        'jobs_running': 'int',
        'jobs_finished': 'int',
        'jobs_cancelled': 'int',
        'jobs_failed': 'int',
        'flink_version': 'str',
        'flink_commit': 'str'
    }

    attribute_map = {
        'taskmanagers': 'taskmanagers',
        'slots_total': 'slots-total',
        'slots_available': 'slots-available',
        'jobs_running': 'jobs-running',
        'jobs_finished': 'jobs-finished',
        'jobs_cancelled': 'jobs-cancelled',
        'jobs_failed': 'jobs-failed',
        'flink_version': 'flink-version',
        'flink_commit': 'flink-commit'
    }

    def __init__(self, taskmanagers=None, slots_total=None, slots_available=None, jobs_running=None, jobs_finished=None, jobs_cancelled=None, jobs_failed=None, flink_version=None, flink_commit=None):  # noqa: E501
        """ClusterOverviewWithVersion - a model defined in Swagger"""  # noqa: E501
        self._taskmanagers = None
        self._slots_total = None
        self._slots_available = None
        self._jobs_running = None
        self._jobs_finished = None
        self._jobs_cancelled = None
        self._jobs_failed = None
        self._flink_version = None
        self._flink_commit = None
        self.discriminator = None
        if taskmanagers is not None:
            self.taskmanagers = taskmanagers
        if slots_total is not None:
            self.slots_total = slots_total
        if slots_available is not None:
            self.slots_available = slots_available
        if jobs_running is not None:
            self.jobs_running = jobs_running
        if jobs_finished is not None:
            self.jobs_finished = jobs_finished
        if jobs_cancelled is not None:
            self.jobs_cancelled = jobs_cancelled
        if jobs_failed is not None:
            self.jobs_failed = jobs_failed
        if flink_version is not None:
            self.flink_version = flink_version
        if flink_commit is not None:
            self.flink_commit = flink_commit

    @property
    def taskmanagers(self):
        """Gets the taskmanagers of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The taskmanagers of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._taskmanagers

    @taskmanagers.setter
    def taskmanagers(self, taskmanagers):
        """Sets the taskmanagers of this ClusterOverviewWithVersion.


        :param taskmanagers: The taskmanagers of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._taskmanagers = taskmanagers

    @property
    def slots_total(self):
        """Gets the slots_total of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The slots_total of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._slots_total

    @slots_total.setter
    def slots_total(self, slots_total):
        """Sets the slots_total of this ClusterOverviewWithVersion.


        :param slots_total: The slots_total of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._slots_total = slots_total

    @property
    def slots_available(self):
        """Gets the slots_available of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The slots_available of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._slots_available

    @slots_available.setter
    def slots_available(self, slots_available):
        """Sets the slots_available of this ClusterOverviewWithVersion.


        :param slots_available: The slots_available of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._slots_available = slots_available

    @property
    def jobs_running(self):
        """Gets the jobs_running of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The jobs_running of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._jobs_running

    @jobs_running.setter
    def jobs_running(self, jobs_running):
        """Sets the jobs_running of this ClusterOverviewWithVersion.


        :param jobs_running: The jobs_running of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._jobs_running = jobs_running

    @property
    def jobs_finished(self):
        """Gets the jobs_finished of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The jobs_finished of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._jobs_finished

    @jobs_finished.setter
    def jobs_finished(self, jobs_finished):
        """Sets the jobs_finished of this ClusterOverviewWithVersion.


        :param jobs_finished: The jobs_finished of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._jobs_finished = jobs_finished

    @property
    def jobs_cancelled(self):
        """Gets the jobs_cancelled of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The jobs_cancelled of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._jobs_cancelled

    @jobs_cancelled.setter
    def jobs_cancelled(self, jobs_cancelled):
        """Sets the jobs_cancelled of this ClusterOverviewWithVersion.


        :param jobs_cancelled: The jobs_cancelled of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._jobs_cancelled = jobs_cancelled

    @property
    def jobs_failed(self):
        """Gets the jobs_failed of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The jobs_failed of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: int
        """
        return self._jobs_failed

    @jobs_failed.setter
    def jobs_failed(self, jobs_failed):
        """Sets the jobs_failed of this ClusterOverviewWithVersion.


        :param jobs_failed: The jobs_failed of this ClusterOverviewWithVersion.  # noqa: E501
        :type: int
        """

        self._jobs_failed = jobs_failed

    @property
    def flink_version(self):
        """Gets the flink_version of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The flink_version of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: str
        """
        return self._flink_version

    @flink_version.setter
    def flink_version(self, flink_version):
        """Sets the flink_version of this ClusterOverviewWithVersion.


        :param flink_version: The flink_version of this ClusterOverviewWithVersion.  # noqa: E501
        :type: str
        """

        self._flink_version = flink_version

    @property
    def flink_commit(self):
        """Gets the flink_commit of this ClusterOverviewWithVersion.  # noqa: E501


        :return: The flink_commit of this ClusterOverviewWithVersion.  # noqa: E501
        :rtype: str
        """
        return self._flink_commit

    @flink_commit.setter
    def flink_commit(self, flink_commit):
        """Sets the flink_commit of this ClusterOverviewWithVersion.


        :param flink_commit: The flink_commit of this ClusterOverviewWithVersion.  # noqa: E501
        :type: str
        """

        self._flink_commit = flink_commit

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClusterOverviewWithVersion, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClusterOverviewWithVersion):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
